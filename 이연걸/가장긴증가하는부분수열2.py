from bisect import bisect_left

n = int(input())
arr = list(map(int, input().split()))

'''
DP인가.. 이분탐색같기도하고...

[10 20 10 30 20 50]
10 [20, 10, 30, 20, 50]
10, 20 [10, 30, 20, 50]
10, 20, 30 [20, 50]
10, 20, 30, 50 []

[30, 20, 10, 20, 10, 50, 30, 40, 50, 30, 100, 10]

30 을 집고 [20, 10, 20, 10, 50, 30, 40, 50, 30, 100, 10] 여기서 30보다 큰걸 찾고
50 을 집고 [30, 40, 50, 30, 100, 10] 여기서 50보다 큰걸 찾고
100을 집고 [10] 여기서 10보다 큰걸 찾고

20을 집고 [10, 20, 10, 50, 30, 40, 50, 30, 100, 10] 여기서 20보다 큰걸 찾고
- 50을 집고 [30, 40, 50, 30, 100, 10] 여기서 50보다 큰걸 찾고
만약 작은게 보인다면?
- 30을 집고 [40, 50, 30, 100, 10] 여기서 30보다 큰걸 찾고


30 [20, 10, 20, 10, 50, 30, 40, 50, 30, 100, 10]

st와 en을 찾는 수열의 범위로 설정한다면
def bs()

'''
# answer = []
# def bs(val, st, en, ans):
#     mid = (st + en) // 2

#     if st > en: return 

#     if arr[mid] < val:

# LIS를 미리 지정한다면?
LIS = []
'''
[30, 20, 10, 20, 10, 50, 30, 40, 50, 30, 100, 10]

[30]
if 작으면
[20]

if 작으면
[10]

if 크면
[10, 20]

if 작으면
[-10-, 20]

if 크면
[10, 20, 50]

if 작으면
[10, 20, 30]

같으면 버리고

if 크면
[10, 20, 30, 40]


'''

LIS = [arr[0]]
for num in arr:
    if num < LIS[-1]:
        go_idx = bisect_left(LIS, num)
        LIS[go_idx] = num
    elif num > LIS[-1]:
        LIS.append(num)

print(len(LIS))
